{"name":"hapi-auth-github","version":"2.0.0","description":"Quick & Simple GitHub Authentication for Hapi.js apps","main":"lib/index.js","scripts":{"coverage":"istanbul cover ./node_modules/tape/bin/tape ./test/*.test.js && ./node_modules/.bin/istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100","lint":"goodparts lib/","spec":"node ./node_modules/tape/bin/tape ./test/*.test.js | node_modules/tap-spec/bin/cmd.js","test":"istanbul cover ./node_modules/tape/bin/tape ./test/*.test.js","start":"PORT=8000 node_modules/.bin/nodemon example/github_server.js"},"repository":"https://github.com/dwyl/hapi-auth-github","keywords":["GitHub","Auth","Authentication","OAuth2","Simple","Easy","Tested","Painless"],"license":"GPL-2.0","homepage":"https://github.com/dwyl/hapi-auth-github#readme","devDependencies":{"env2":"^2.1.1","goodparts":"^1.1.1","hapi":"^15.1.1","hoek":"^4.1.0","istanbul":"^0.4.5","jsonwebtoken":"^7.1.9","nock":"^8.0.0","nodemon":"^1.11.0","pre-commit":"^1.1.3","redis-connection":"^5.0.0","tap-spec":"^4.1.1","tape":"^4.6.2"},"pre-commit":["lint","coverage"],"gitHead":"37785c1b22f668f6d83cab3adef1e79a3eed4c8c","versions":[{"number":"1.0.0","date":"2015-11-17T14:46:41.087Z"},{"number":"1.0.1","date":"2015-11-19T20:35:48.348Z"},{"number":"1.0.2","date":"2015-11-19T23:34:03.577Z"},{"number":"1.0.3","date":"2015-11-20T18:29:51.130Z"},{"number":"1.0.4","date":"2015-11-20T18:42:50.409Z"},{"number":"1.0.5","date":"2015-11-23T22:14:57.569Z"},{"number":"1.0.6","date":"2016-02-07T22:00:02.867Z"},{"number":"2.0.0","date":"2016-10-09T22:39:01.073Z"}],"readme":"# `hapi-auth-github` makes it *easy* to <img width=\"300\" alt=\"login with github\" src=\"https://cloud.githubusercontent.com/assets/194400/11214293/4e309bf2-8d38-11e5-8d46-b347b2bd242e.png\">\n\n**GitHub Authentication** Plugin for Hapi.js Apps with ***detailed documentation***.\n\n[![Build Status](https://travis-ci.org/dwyl/hapi-auth-github.svg)](https://travis-ci.org/dwyl/hapi-auth-github)\n[![Test Coverage](https://img.shields.io/codecov/c/github/dwyl/hapi-auth-github.svg?maxAge=2592000)](https://codecov.io/github/dwyl/hapi-auth-github?branch=master)\n[![JavaScript Style Guide](https://img.shields.io/badge/code%20style-goodparts-brightgreen.svg)](https://github.com/dwyl/goodparts)\n[![Code Climate](https://codeclimate.com/github/dwyl/hapi-auth-github/badges/gpa.svg)](https://codeclimate.com/github/dwyl/hapi-auth-github)\n[![Dependency Status](https://david-dm.org/dwyl/hapi-auth-github.svg)](https://david-dm.org/dwyl/hapi-auth-github)\n[![devDependencies Status](https://david-dm.org/dwyl/hapi-auth-github/dev-status.svg)](https://david-dm.org/dwyl/hapi-auth-github?type=dev)\n## Why?\n\nWe use *GitHub* for ***all*** our coding projects and are building\na tool to keep track of all them: https://github.com/dwyl/tudo\n\nGiven that other people will have projects that need GitHub Authentication,  \nwe have *de-coupled* our OAuth code into this re-useable Hapi Plugin.\n\n> If you have _any_ questions or would like to *contribute* to this module,\nplease get in touch:\n[![Join the chat at https://gitter.im/dwyl/chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/dwyl/chat?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## *What*?\n\nAn easy-to-use Hapi.js plugin that gives you GitHub OAuth Authentication  \nin a few simple steps and has *human-readable*, maintained code.\n\n> Note: if you are new to Hapi check out:\nhttps://github.com/dwyl/learn-hapi\n\n## How?\n\nIf you're *new* to GitHub Authentication, and want to *understand* how it works, read the GitHub OAuth Web Application flow:  \nhttps://developer.github.com/v3/oauth/#web-application-flow\n\n*Or*, if you just need to get up and running *fast*, follow these simple steps:\n\n### 1. Install `hapi-auth-github` from NPM\n\nInstall the plugin from npm and save it to your `package.json`:\n\n```sh\nnpm install hapi-auth-github --save\n```\n\n### 2. Create an App on GitHub\n\nFollow the instructions in:\n[GITHUB-APP-STEP-BY-STEP-GUIDE.md](https://github.com/dwyl/hapi-auth-github/blob/master/GITHUB-APP-STEP-BY-STEP-GUIDE.md)\n\n### 3. Export the *Required* Environment Variables\n\nOnce you've created your app following the [*GitHub App Step-by-Step Guide*](https://github.com/dwyl/hapi-auth-github/blob/master/GITHUB-APP-STEP-BY-STEP-GUIDE.md)\n\nExport the Environment Variables:\n```sh\nBASE_URL=http://localhost:8000 # same as Authorized JavaScript Origin\nGITHUB_CLIENT_ID=YourGitHubClientID\nGITHUB_CLIENT_SECRET=SuperSecret\nGITHUB_AUTH_REDIRECT_URL=/githubauth\nPORT=8000\n# Optionally (If you are using hapi-auth-jwt2)\nJWT_SECRET=ItsNoSecretBecauseYouToldEverybody\n```\n#### Notes on Environment Variables:\n\n> Tip: If you (*or anyone on your team*) are new to\nEnvironment Variables or need a refresher,  \nsee: [https://github.com/dwyl/**learn-environment-variables**](https://github.com/dwyl/learn-environment-variables)  \n\nWe named/exportd the 3 variables prefixed with `GITHUB_`\nto _distinguish_ them from other services you may be using which\nmay also have an environment variable named `CLIENT_ID`...\n\nThe `BASE_URL` is required to know which url your app is using.\nit needs to be identical to the `Authorized JavaScript Origin`\nthat you set in step 2 above.\n\nThe `GITHUB_AUTH_REDIRECT_URL` is the url (*endpoint*) where GitHub will\nsend the initial OAuth2 `code` to _confirm_ your application is *real*.\nMake *sure* that the url is *identical* to the one you defined when\nsetting up your app on GitHub. e.g: http://localhost:8000/githubauth\n\n\n### 4. Create Your (Custom) Handler Function\n\nThis is where you *decide* what to do with the person's `profile` details  \nonce they have authorized your App to use their GitHub details.\n\nYour custom handler should have the following signature:\n```js\nfunction custom_handler(request, reply, tokens, profile) {\n  // save the profile as a session so you can personalize their experience of your app\n  // use the reply() to send a response/view to the visitor\n}\n```\nThe handler function parameters are:\n+ **request** is the hapi request object with all the properties.\n+ **reply** is the standard hapi reply object used to send your response to the client or send a rendered view.\n+ ***tokens*** are the OAuth2 tokens returned by GitHub for the session\nsee: [**sample_auth_token.json**](https://github.com/dwyl/hapi-auth-github/blob/master/test/fixtures/sample-auth-token.json)\n+ ***profile*** is the person's GitHub profile\nsee: [**sample_profile.json**](https://github.com/dwyl/hapi-auth-github/blob/master/test/fixtures/sample-profile.json)\n\n> For an *example* custom_handler, see:\n[example/**github_oauth_handler.js**](https://github.com/dwyl/hapi-auth-github/blob/605c9d59f6d26cbfbd2fbcf932fa9efb78d4aa5f/example/github_oauth_handler.js#L3)\n\n### 5. Register the Plugin into your Hapi.js Server\n\nThe final step is to register the plugin into your Hapi.js Server\ndeclaring your desired options:\n\n```js\n// declare your desired options for the plugin\nvar opts = {\n  handler: require('./github_oauth_handler.js'), // your handler\n  SCOPE: 'user' // ask for their public email address\n};\n\nserver.register([{ register: require('hapi-auth-github'), options:opts }],\n function (err) {\n  if(err){\n    // handle the error if the plugin failed to load:  \n  }\n  // the rest of your app ...\n});\n```\n\n#### `options` *explained*\n\n+ `handler` - the handler you defined above in **step 4**\nwhich is your custom logic for GitHub auth enabled app.\n+ `SCOPE` - these are the ***permissions*** your app is requesting.\n\n\n## Implementation Notes:\n\nTo run the *example* you will need an extra environment variable:\n```sh\nBASE_URL=http://localhost:8000 # same as Authorized JavaScript Origin\nGITHUB_CLIENT_ID=YourGitHubClientID\nGITHUB_CLIENT_SECRET=SuperSecret\nGITHUB_AUTH_REDIRECT_URL=/githubauth\nPORT=8000\n# Optionally (If you are using hapi-auth-jwt2)\nJWT_SECRET=ItsNoSecretBecauseYouToldEverybody\n```\n\n> Also, if you're wondering what that `JWT_SECRET` *Environment Variables* is for,  \nsee: [https://github.com/dwyl/**learn-json-web-tokens**](https://github.com/dwyl/learn-json-web-tokens)\n\n\n## Background Reading\n\n+ Basics: https://developer.github.com/guides/basics-of-authentication\n+ Intro to OAuth2: https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2\n+ GitHub OAuth Scopes: https://developer.github.com/v3/oauth/#scopes\n(*what you should ask to access on a person' GitHub account*)\n","created":"2015-11-17T14:46:41.087Z","modified":"2016-10-09T22:39:01.073Z","lastPublisher":{"name":"nelsonic","email":"contact.nelsonic@gmail.com"},"owners":[{"name":"nelsonic","email":"contact.nelsonic@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"hapi-auth-github","_nodeVersion":"6.7.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/hapi-auth-github-2.0.0.tgz_1476052740286_0.22696636687032878"},"_npmUser":{"name":"nelsonic","email":"contact.nelsonic@gmail.com"},"_npmVersion":"3.10.3","_rev":"1-c1a92a25238f752f8ffae835f6dd4e6b","_shasum":"88c9bc3e9a658ca5e1f3f844e071c417c2c14f1e","author":{"name":"@rjmk & @nelsonic @dwyl"},"bugs":{"url":"https://github.com/dwyl/hapi-auth-github/issues"},"directories":{"example":"example","test":"test"},"dist-tags":{"latest":"2.0.0"},"dist":{"shasum":"88c9bc3e9a658ca5e1f3f844e071c417c2c14f1e","tarball":"http://registry.npmjs.org/hapi-auth-github/-/hapi-auth-github-2.0.0.tgz"},"maintainers":[{"name":"nelsonic","email":"contact.nelsonic@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-09T22:39:01.073Z","created":"2015-11-17T14:46:41.087Z","1.0.0":"2015-11-17T14:46:41.087Z","1.0.1":"2015-11-19T20:35:48.348Z","1.0.2":"2015-11-19T23:34:03.577Z","1.0.3":"2015-11-20T18:29:51.130Z","1.0.4":"2015-11-20T18:42:50.409Z","1.0.5":"2015-11-23T22:14:57.569Z","1.0.6":"2016-02-07T22:00:02.867Z","2.0.0":"2016-10-09T22:39:01.073Z"}}}