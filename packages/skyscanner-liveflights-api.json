{"name":"skyscanner-liveflights-api","version":"0.1.0","description":"[![CircleCI](https://circleci.com/gh/jameshopkins/skyscanner-liveflights-api.svg?style=svg)](https://circleci.com/gh/jameshopkins/skyscanner-liveflights-api) [![Coverage Status](https://coveralls.io/repos/github/jameshopkins/skyscanner-liveflights-api/bad","main":"dist/index.js","scripts":{"compile":"babel src --out-dir dist --ignore spec.js","coverage":"nyc yarn test && nyc report","coverage:coveralls":"yarn coverage -- --reporter=text-lcov | coveralls","prepublish":"yarn compile","format":"prettier --write --single-quote src/**/*.js","test":"API_KEY=123 mocha $(find . -name '*spec.js' -not -path './node_modules/*') --compilers js:babel-register"},"files":["dist","yarn.lock","README.md","LICENSE"],"repository":"https://github.com/jameshopkins/skyscanner-liveflights-api","license":"MIT","dependencies":{"babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-runtime":"^6.15.0","debug":"^2.6.0","fluture":"^4.3.0","isomorphic-fetch":"^2.2.1","ramda":"^0.23.0","sanctuary":"^0.11.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-core":"^6.21.0","babel-plugin-transform-es2015-modules-commonjs":"^6.18.0","babel-register":"^6.18.0","coveralls":"^2.11.15","mocha":"^3.2.0","nyc":"^10.0.0","power-assert":"^1.4.2","prettier":"^0.13.1","sinon":"^1.17.7"},"gitHead":"4b8113faf8b4aaf0f990361b8a1e1d4aeb3e097d","homepage":"https://github.com/jameshopkins/skyscanner-liveflights-api#readme","versions":[{"number":"0.0.1","date":"2017-01-23T12:52:07.768Z"},{"number":"0.1.0","date":"2017-01-29T19:51:52.253Z"}],"readme":"# skyscanner-liveflights-api\n\n[![CircleCI](https://circleci.com/gh/jameshopkins/skyscanner-liveflights-api.svg?style=svg)](https://circleci.com/gh/jameshopkins/skyscanner-liveflights-api)\n[![Coverage Status](https://coveralls.io/repos/github/jameshopkins/skyscanner-liveflights-api/badge.svg)](https://coveralls.io/github/jameshopkins/skyscanner-liveflights-api)\n\n> A point-free, monadic JS API wrapping the [Skyscanner Live Flights API](https://github.com/Skyscanner/api-documentation/tree/master/live_flights_pricing)\n\n## How To Use\n\n### Compose Your Query\n\nYou can either refer to the [documentation](https://support.business.skyscanner.net/hc/en-us/articles/211308489-Flights-Live-Pricing?_ga=1.46473255.1468313731.1483528061) or use the [test harness](http://business.skyscanner.net/portal/en-GB/Documentation/FlightsLivePricingQuickStart), to obtain valid parameters.\n\n### Initiate The API\n\n1. Ensure that you have an `API_KEY` environment variable set, whose value is your API key.\n\n2. Construct the query\n\n  ```js\n  import submitQuery from 'skyscanner-liveflights-api';\n\n  submitQuery({\n    adults: 1,\n    cabinclass: 'Economy',\n    originplace: 'SFO-iata',\n    outbounddate: '2017-03-24',\n    inbounddate: '2017-05-30',\n    destinationplace: 'BOS-iata'\n  }).fork(\n    console.error,\n    console.log\n  );\n  ```\n\n### Notes\n\n#### Supported parameters\n\nCurrently the only supported parameters are:\n\n* `adults`\n* `cabinclass`\n* `originplace`\n* `outbounddate`,\n* `inbounddate`,\n* `destinationplace`\n\n#### Usage Interfaces\n\nIf you inspect the source code, you'll notice that all integral functionality is encapsulated in function compositions.\n\nThis concept means that, if required, you can build your own custom interface of `skyscanner-liveflights-api` - itself, a composition of functions.\n\nFor example, the [main entrypoint](index.js), is a composition of two other functions (`pollForResults` and `createSession`) that, when used together, make up the standard interface.\n\nYou could very easily extend this continutation. E.g\n\n```js\nimport { compose, lensProp, lensIndex, map, view } from 'ramda';\nimport submitQuery from 'skyscanner-liveflights-api';\n\nconst focusLens = compose(lensProp('Itineraries'), lensProp(0));\nconst focusOnItineraryItem = map(view(focusLens)))\n\nconst getTheFirstItemInTheItinerary = compose(\n  focusOnItineraryItem,\n  submitQuery\n);\n\ngetTheFirstItemInTheItinerary({\n  adults: 1,\n  cabinclass: 'Economy',\n  originplace: 'SFO-iata',\n  outbounddate: '2017-03-24',\n  inbounddate: '2017-05-30',\n  destinationplace: 'BOS-iata'\n}).fork(\n  console.error,\n  console.log\n);\n\n```\n\n## Debugging\n\n[`debug`](https://github.com/visionmedia/debug) is supported, so you can log the individual transactions in the orchestration to stdout, by prepending `DEBUG=skyscanner-liveflights-api` to the script that starts your consumer application.\n\n## Running Tests\n```bash\nmake test\n# OR\nmake coverage\n```\n\n## Contributing\n1. Fork the repo and create your branch from `master`\n2. `yarn`\n3. Add tests\n4. Do your shizzle\n5. Create a PR\n","created":"2017-01-23T12:52:07.768Z","modified":"2017-01-29T19:51:52.253Z","lastPublisher":{"name":"jameshopkins","email":"jameshopkins0709@gmail.com"},"owners":[{"name":"jameshopkins","email":"jameshopkins0709@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"skyscanner-liveflights-api","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/skyscanner-liveflights-api-0.1.0.tgz_1485719511662_0.5845032923389226"},"_npmUser":{"name":"jameshopkins","email":"jameshopkins0709@gmail.com"},"_npmVersion":"3.10.8","_rev":"2-f6094d83f9732056025cc0c299e3edee","_shasum":"643898321acdb0dc00032f054a6206037d2d1aeb","author":{"name":"James Muir-Hopkins","email":"jameshopkins0709@gmail.com"},"bugs":{"url":"https://github.com/jameshopkins/skyscanner-liveflights-api/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"643898321acdb0dc00032f054a6206037d2d1aeb","tarball":"https://registry.npmjs.org/skyscanner-liveflights-api/-/skyscanner-liveflights-api-0.1.0.tgz"},"maintainers":[{"name":"jameshopkins","email":"jameshopkins0709@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-29T19:51:52.253Z","created":"2017-01-23T12:52:07.768Z","0.0.1":"2017-01-23T12:52:07.768Z","0.1.0":"2017-01-29T19:51:52.253Z"}}}