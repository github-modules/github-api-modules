{"name":"tentacles-streams","version":"0.1.9","description":"Streaming for Tentacles GitHub client","main":"lib/streaming-client.js","scripts":{"test":"mocha test/"},"keywords":["github","tentacles","streaming"],"license":"MIT","dependencies":{"event-stream":"^3.3.0","lodash":"^3.8.0","parse-links":"^0.1.0","tentacles":"^0.7.0"},"devDependencies":{"mocha":"^2.2.4"},"repository":"https://github.com/gitterHQ/tentacles-streams","homepage":"https://github.com/gitterHQ/tentacles-streams#readme","gitHead":"03c1b124bb0cc5dd1f3ee4d03752b86cdb0cfed0","versions":[{"number":"0.1.1","date":"2015-05-05T21:54:42.699Z"},{"number":"0.1.2","date":"2015-05-06T08:49:46.778Z"},{"number":"0.1.3","date":"2015-05-06T10:55:55.313Z"},{"number":"0.1.6","date":"2015-09-25T12:27:33.543Z"},{"number":"0.1.8","date":"2016-09-06T15:38:04.233Z"},{"number":"0.1.9","date":"2016-09-06T16:44:07.071Z"}],"readme":"# tentacles-streams\n\nA streaming GitHub client for pagenated results for node.js.\n\n## What is Tentacles Streams?\n\nTentacles Streams is an adapter for the [Tentacles](https://github.com/gitterHQ/tentacles) GitHub client. It takes pagenated results from the GitHub API and returns a stream of results. All pages of results will automatically be fetched from GitHub.\n\n## Using Tentacles Streams\n\nInstall Tentacles Streams:\n\n```shell\n$ npm install tentacles-streams --save\n```\n\n```javascript\nvar TentaclesStreams = require('tentacles-streams');\n\n/* Options are passed through to the tentacles client. */\nvar client = new TentaclesStreams({ accessToken: process.env.GITHUB_ACCESS_TOKEN });\n\n/* Creates a ReadableStream in object stream mode. Options are passed through to Tentacles */\nvar stream = client.issue.listAllVisibleForAuthUser({ query: { state: 'all', per_page: 10 /* Will default to 100 */ } });\n\n/* Pipe the stream somewhere */\nstream.pipe(issueProcessor);\n\n/* .. or use events .. */\nstream.on('data', function(issue) {\n  /* Do something with the issue */\n});\n\nstream.on('end', function() {\n  /* All results have been read */\n});\n\nstream.on('error', function(err) {\n  /* An error occurred */\n});\n```\n\n## Supported Methods\n\nAll Tentacles methods starting with `list` are supported. Currently these are:\n\n**Events**:\n* `tentacles.events.listPublic(options)`\n* `tentacles.events.listForRepo(full_name, options)`\n* `tentacles.events.listIssueEventsForRepo(full_name, options)`\n* `tentacles.events.listNetworkEventsForRepo(full_name, options)`\n* `tentacles.events.listForOrg(org, options)`\n* `tentacles.events.listReceivedEventsForUser(username, options)`\n* `tentacles.events.listPublicReceivedEventsForUser(username, options)`\n* `tentacles.events.listEventsForUser(username, options)`\n* `tentacles.events.listPublicEventsForUser(username, options)`\n* `tentacles.events.listForUserInOrg(username, org, options)`\n\n**GitRef**:\n* `tentacles.gitRef.listAll(full_name, ref, options)`\n\n**Issue**:\n* `tentacles.issue.listAllVisibleForAuthUser(options)`\n* `tentacles.issue.listAllOwnerAndMemberForAuthUser(options)`\n* `tentacles.issue.listForOrgForAuthUser(full_name, options)`\n* `tentacles.issue.listForRepo(full_name, options)`\n\n**IssueComment**:\n* `tentacles.issueComment.listForIssue(full_name, number, options)`\n* `tentacles.issueComment.listForRepo(full_name, options)`\n\n**IssueLabel**:\n* `tentacles.issueLabel.listForRepo(full_name, options)`\n* `tentacles.issueLabel.listForIssue(full_name, number, options)`\n* `tentacles.issueLabel.listForMilestone(full_name, number, options)`\n\n**Org**:\n* `tentacles.org.listForAuthUser(options)`\n* `tentacles.org.listForUser(username, options)`\n* `tentacles.org.listAll(options)`\n\n**OrgMember**:\n* `tentacles.orgMember.listMembers(org, options)`\n* `tentacles.orgMember.listPublicMembers(org, options)`\n* `tentacles.orgMember.listMembershipsForAuthUser(options)`\n\n**OrgTeam**:\n* `tentacles.org.listForOrg(org, options)`\n* `tentacles.org.listMembers(id, options)`\n* `tentacles.org.listRepos(id, options)`\n* `tentacles.org.listForAuthUser(full_name, options)`\n\n**PullRequest**:\n* `tentacles.pullRequest.listForRepo(full_name, options)`\n* `tentacles.pullRequest.listCommits(full_name, number, options)`\n* `tentacles.pullRequest.listFiles(full_name, number, options)`\n\n**PullRequestComment**:\n* `tentacles.pullRequestComments.listForPullRequest(full_name, number, options)`\n* `tentacles.pullRequestComments.listForRepo(full_name, options)`\n\n**Reaction**:\n* `tentacles.reactions.listForCommitComment(full_name, id, options)`\n* `tentacles.reactions.listForIssue(full_name, number, options)`\n* `tentacles.reactions.listForIssueComment(full_name, id, options)`\n* `tentacles.reactions.listForPullRequestReviewComment(full_name, id, options)`\n\n**Repo**:\n* `tentacles.repo.listForAuthUser(options)`\n* `tentacles.repo.listForUser(username, options)`\n* `tentacles.repo.listForOrg(org, options)`\n* `tentacles.repo.listContributors(full_name, options)`\n* `tentacles.repo.listLanguages(full_name, options)`\n* `tentacles.repo.listTeams(full_name, options)`\n* `tentacles.repo.listTags(full_name, options)`\n* `tentacles.repo.listBranches(full_name, options)`\n\n**RepoCollaborator**:\n* `tentacles.repoCollaborator.list(full_name, options)`\n\n**RepoCommit**:\n* `tentacles.repoCommit.list(full_name, options)`\n\n**RepoWebhooks**:\n* `tentacles.repoWebHooks.list(full_name, options)`\n\n**Starring**:\n* `tentacles.starring.listForRepo(full_name, options)`\n* `tentacles.starring.listForUser(username, options)`\n* `tentacles.starring.listForAuthUser(options)`\n\n**User**:\n* `tentacles.user.listAll(options)`\n\n**UserEmail**:\n* `tentacles.userEmail.listForAuthUser(options)`\n\n**UserFollower**:\n* `tentacles.userFollower.listForUser(username, options)`\n* `tentacles.userFollower.listForAuthUser(options)`\n* `tentacles.userFollower.listFollowingForUser(username, options)`\n* `tentacles.userFollower.listFollowingForAuthUser(options)`\n\n**Watching**:\n* `tentacles.watching.listForRepo(full_name, options)`\n* `tentacles.watching.listForUser(username, options)`\n* `tentacles.watching.listForAuthUser(options)`\n\n## Batching Pages\n\nYou can configure Tentacles Streams to pump the each page of results through as\nan hash of `{ items: [], page: n, lastPage: m }`, rather than individual items.\nTo do this, set `{ stream: { batchPages: true } }` in the options hash.\n\n```javascript\nvar TentaclesStreams = require('tentacles-streams');\n\nvar client = new TentaclesStreams();\nvar stream = client.issue.listForRepo('ruby/ruby', { stream: { batchPages: true } });\n\nstream.on('data', function(data) {\n  console.log(data.items.length); // 100 (or `per_page`) items\n  console.log(data.page); // 1 - n\n  console.log(data.lastPage); // n\n});\n```\n\n## Backpressure, Pause and Resume\n\nThe streams support backpressure and `pause` and `resume`\n\n```javascript\nvar TentaclesStreams = require('tentacles-streams');\n\nvar client = new TentaclesStreams();\nvar stream = client.issue.listForRepo('ruby/ruby');\n\nvar count = 0;\nstream.on('data', function(issue) {\n  console.log(issue);\n\n  /* Pause for 1s every hundred issues */\n  if (++count % 100 === 0) {\n    stream.pause();\n    setTimeout(function() {\n      stream.resume();\n    }, 1000);\n  }\n});\n```\n\n## Skipping results\n\nIf you want to skip some pages in the results, set `{ query: { page: X } }` in the options hash.\n\n```javascript\nvar TentaclesStreams = require('tentacles-streams');\n\nvar client = new TentaclesStreams();\nvar stream = client.issue.listForRepo('ruby/ruby', { query: { page: 5 } });\n\n/* Will start streaming from page 5 of results */\n```\n\n\n\n### Contributing\n\nBuilt by [Andrew Newdigate](https://github.com/suprememoocow)\n([@suprememoocow](https://twitter.com/suprememoocow)) and the team at\n[Gitter](https://gitter.im).\n\nPull requests are welcome!\n\n### Licence\n\n```\nThe MIT License (MIT)\n\nCopyright (c) 2015 Gitter\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n","created":"2015-05-05T21:54:42.699Z","modified":"2016-09-06T16:44:07.071Z","lastPublisher":{"name":"suprememoocow","email":"andrewn@datatribe.net"},"owners":[{"name":"suprememoocow","email":"andrewn@datatribe.net"}],"other":{"_attachments":{},"_from":".","_id":"tentacles-streams","_nodeVersion":"4.4.3","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/tentacles-streams-0.1.9.tgz_1473180246060_0.08893806044943631"},"_npmUser":{"name":"suprememoocow","email":"andrewn@datatribe.net"},"_npmVersion":"2.15.8","_rev":"1-14043ea7139b25f46150a7ef82ca1363","_shasum":"31f74c092b9d3fc3adf6c8cf08bf3b79ac17848e","author":{"name":"Andrew Newdigate","email":"andrew@gitter.im","url":"http://about.me/andrewnewdigate"},"bugs":{"url":"https://github.com/gitterHQ/tentacles-streams/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"0.1.9"},"dist":{"shasum":"31f74c092b9d3fc3adf6c8cf08bf3b79ac17848e","tarball":"http://registry.npmjs.org/tentacles-streams/-/tentacles-streams-0.1.9.tgz"},"maintainers":[{"name":"suprememoocow","email":"andrewn@datatribe.net"}],"readmeFilename":"README.md","time":{"modified":"2016-09-06T16:44:07.071Z","created":"2015-05-05T21:54:42.699Z","0.1.1":"2015-05-05T21:54:42.699Z","0.1.2":"2015-05-06T08:49:46.778Z","0.1.3":"2015-05-06T10:55:55.313Z","0.1.6":"2015-09-25T12:27:33.543Z","0.1.8":"2016-09-06T15:38:04.233Z","0.1.9":"2016-09-06T16:44:07.071Z"}}}