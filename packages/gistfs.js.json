{"name":"gistfs.js","version":"1.0.0","description":"Github gist API wrapper to writeFile and readFile","main":"index.js","scripts":{"test":"standard && node test.js | tap-spec","doc":"dox -r < index.js | doxme --readme > README.md"},"keywords":["github","gist","api","fs","writefile","readfile"],"license":"MIT","devDependencies":{"dotenv":"^0.5.1","dox":"^0.6.1","doxme":"^1.8.1","octokat":"^0.4.6","standard":"^3.3.0","tap-spec":"^2.2.2","tape":"^3.5.0"},"dependencies":{"queue":"^3.1.0","xtend":"^4.0.0"},"repository":"https://github.com/gmaclennan/gistfs.js","homepage":"https://github.com/gmaclennan/gistfs.js","gitHead":"a34f24ace04076ecd3f48adbb9f719dffddac4c0","versions":[{"number":"0.0.1","date":"2015-03-05T21:43:33.364Z"},{"number":"1.0.0","date":"2015-03-30T21:01:21.227Z"}],"readme":"# gistfs.js\n\n[![build status](https://secure.travis-ci.org/gmaclennan/gistfs.js.png)](http://travis-ci.org/gmaclennan/gistfs.js)\n\nGisthub gist API wrapper to writeFile and readFile\n\n\n### `gistfs(repo)`\n\nA mixin for [Octokat.js](https://github.com/philschatz/octokat.js) that\nprovides a simple wrapper for writing to and reading from a gist. It\nprovides an interface similar to node.js `fs.readFile` and `fs.writeFile`.\n\n## Limitations\n\nCurrently will only read files < 1Mb\n\n\n### Parameters\n\n| parameter | type          | description                                                                                      |\n| --------- | ------------- | ------------------------------------------------------------------------------------------------ |\n| `repo`    | Octokat\\.gist | A vaid repo returned from Octokat with the call `octo.gists('gist_id')`. See below for examples. |\n\n\n### Example\n\n```js\nvar gistfs = require('gistfs'); \nvar Octokat = require('octokat');\n\nvar octo = new Octocat({ username: \"USER_NAME\", password: \"PASSWORD\" });\n\nvar gh = gistfs(octo.gists('gist_id'));\n```\n\n\n**Returns** `Object`, returns and instance of gistfs with two methods `readFile` and `writeFile`.\n\n\n### `writeFile(filename, data, callback)`\n\nAsynchronously writes data to a file on a Gist, replacing the file if it\nalready exists. `data` can be a string or a buffer. A buffer is written \nencoded as base64.\n\n\n### Parameters\n\n| parameter  | type           | description            |\n| ---------- | -------------- | ---------------------- |\n| `filename` | String         | Cannot contain slashes |\n| `data`     | String\\,Buffer |                        |\n| `callback` | Function       |                        |\n\n\n### Example\n\n```js\ngh.writeFile('message.txt', 'Hello Github', function (err) {\n  if (err) throw err;\n  console.log('It\\'s saved!');\n});\n```\n\n\n### `readFile(filename, [options], callback)`\n\nAsynchronously read a file on Github.\n\nThe file path is always interpreted from the root of the repo, whether or\nnot it is preceded by a slash.\n\nThe callback is passed two arguments `(err, data)`, where `data` is the\ncontents of the file.\n\nAssumes data on gist is utf8. *TODO* read gist files encoded as base64.\n\nIf no encoding is specified, then the raw buffer is returned.\n\n### Parameters\n\n| parameter   | type     | description                                          |\n| ----------- | -------- | ---------------------------------------------------- |\n| `filename`  | String   |                                                      |\n| `[options]` | Object   | _optional:_ `options.encoding=null` (returns Buffer) |\n| `callback`  | Function |                                                      |\n\n\n### Example\n\n```js\ngh.readFile('my_file.txt', { encoding: 'utf8' }, function (err, data) { \n  if (err) throw err; \n  console.log(data);\n  // text contents of file\n});\n```\n\n## Installation\n\nRequires [nodejs](http://nodejs.org/).\n\n```sh\n$ npm install gistfs.js\n```\n\n## Tests\n\n```sh\n$ npm test\n```\n\n\n","created":"2015-03-05T21:43:33.364Z","modified":"2015-03-30T21:01:21.227Z","lastPublisher":{"name":"gmaclennan","email":"gmaclennan@digital-democracy.org"},"owners":[{"name":"gmaclennan","email":"gregor@cantab.net"}],"other":{"_attachments":{},"_from":".","_id":"gistfs.js","_nodeVersion":"0.10.38","_npmUser":{"name":"gmaclennan","email":"gmaclennan@digital-democracy.org"},"_npmVersion":"2.7.3","_rev":"1-23fb819f55faf1e1cb9d8f6fd2a33bdc","_shasum":"ec8aad7865274a256acdd0254494a8b4c17e8a1a","author":{"name":"Gregor MacLennan"},"bugs":{"url":"https://github.com/gmaclennan/gistfs.js/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"ec8aad7865274a256acdd0254494a8b4c17e8a1a","tarball":"http://registry.npmjs.org/gistfs.js/-/gistfs.js-1.0.0.tgz"},"maintainers":[{"name":"gmaclennan","email":"gregor@cantab.net"}],"readmeFilename":"README.md","time":{"modified":"2015-03-30T21:01:21.227Z","created":"2015-03-05T21:43:33.364Z","0.0.1":"2015-03-05T21:43:33.364Z","1.0.0":"2015-03-30T21:01:21.227Z"}}}