{"repository":"https://github.com/kiril-stanoev/nativescript-okhttp","name":"nativescript-okhttp","version":"0.0.8","main":"nativescript-okhttp.js","nativescript":{"platforms":{"android":"1.4.0"}},"homepage":"https://github.com/kiril-stanoev/nativescript-okhttp","keywords":["NativeScript"],"license":"MIT","gitHead":"b12162ebf293b75c37d2bf8063fcc5198575dd12","description":"[OkHttp](http://square.github.io/okhttp/) is an HTTP client that supports:","scripts":{},"versions":[{"number":"0.0.1","date":"2015-10-19T09:04:17.172Z"},{"number":"0.0.2","date":"2015-10-19T09:11:29.741Z"},{"number":"0.0.3","date":"2015-10-19T09:30:08.741Z"},{"number":"0.0.5","date":"2015-10-19T10:05:58.859Z"},{"number":"0.0.6","date":"2015-10-19T12:00:11.764Z"},{"number":"0.0.7","date":"2015-10-19T17:19:59.424Z"},{"number":"0.0.8","date":"2015-10-21T05:55:28.096Z"}],"readme":"# NativeScript plugin for OkHttp\r\n\r\n[OkHttp](http://square.github.io/okhttp/) is an HTTP client that supports:\r\n\r\n- HTTP/2 and SPDY support allows all requests to the same host to share a socket.\r\n- Connection pooling reduces request latency (if SPDY isnâ€™t available).\r\n- Transparent GZIP shrinks download sizes.\r\n- Response caching avoids the network completely for repeat requests.\r\n\r\n![](http://content.screencast.com/users/kiril/folders/Jing/media/fd6b67b1-ffed-48ec-b16c-554dcb08af8f/2015-10-19_1516.png)\r\n\r\n# Installation\r\n\r\nRun the following command from the root of your project:\r\n\r\n```\r\n$ tns plugin add nativescript-okhttp\r\n```\r\n\r\nThis command automatically installs the necessary files, as well as stores nativescript-okhttp as a dependency in your project's `package.json` file.\r\n\r\n# Usage\r\n\r\nTo use the social share module you must first `require()` it. After you `require()` the module you have access to its APIs.\r\n\r\n``` js\r\nvar okHttp = require(\"nativescript-okhttp\");\r\n```\r\n\r\n# API\r\n\r\n### getString(url)\r\n\r\nThe `getString()` method downloads a URL as a string.\r\n\r\n``` js\r\nvar okHttp = require(\"nativescript-okhttp\");\r\nfunction pageLoaded(args) {\r\n    var result = okHttp.getString(\"http://www.google.com/\");\r\n    console.log(result);\r\n}\r\nexports.pageLoaded = pageLoaded;\r\n```\r\n### getJSON(url)\r\n\r\nThe `getString()` method downloads a URL as a string.\r\n\r\n``` js\r\nvar okHttp = require(\"nativescript-okhttp\");\r\nfunction pageLoaded(args) {\r\n    var json = okHttp.getJSON(\"https://api.github.com/gists/c2a7c39532239ff261be\");\r\n    console.log(\"JSON url: \" + json.url);\r\n}\r\nexports.pageLoaded = pageLoaded;\r\n```\r\n### getImage(url)\r\n\r\nThe `getImage()` method returns an image as a stream from a remote URL.\r\n\r\nIn this example, we will download an image from umgur (http://i.imgur.com/sXG9IHW.jpg) and we will share it ot Facebook using a social share plugin by @tjvantoll (https://github.com/tjvantoll/nativescript-social-share).\r\n\r\n![](http://content.screencast.com/users/kiril/folders/Jing/media/829344ad-7cb3-4e2a-8741-571d8c7a8fdc/2015-10-19_1516.png)\r\n\r\n``` js\r\nvar socialShare = require(\"nativescript-social-share\");\r\nvar imageSource = require(\"image-source\");\r\nvar okHttp = require(\"nativescript-okhttp\");\r\nfunction pageLoaded(args) {\r\n    var inputStream = okHttp.getImage(\"http://i.imgur.com/sXG9IHW.jpg\");\r\n    var image = imageSource.fromData(inputStream);\r\n    socialShare.shareImage(image);\r\n}\r\nexports.pageLoaded = pageLoaded;\r\n```\r\n![](http://content.screencast.com/users/kiril/folders/Jing/media/4faa243e-09f0-458c-a7a2-80e86c6be698/2015-10-19_1517.png)\r\n![](http://content.screencast.com/users/kiril/folders/Jing/media/844cc4d0-8a34-4341-8730-ead1f2e002ea/2015-10-19_1517.png)\r\n\r\n# Future versions will include\r\n- Actual asynchronous support. I couldn't figure out how async calls in Android translate to JavaScript. That's why I hacked it with \r\n\r\n``` js\r\nvar policy = new android.os.StrictMode.ThreadPolicy.Builder().permitAll().build();\r\nandroid.os.StrictMode.setThreadPolicy(policy);\r\n```\r\nwhich prevents you from dealing with android.os.NetworkOnMainThreadException. This will be fixed in the next version.\r\n- TypeScript support.\r\n- JavaScript/TypeScript APIs from the [OkHttp Recipes Wiki page](https://github.com/square/okhttp/wiki/Recipes).\r\n    - Accessing Headers\r\n    - Posting a String\r\n    - Post Streaming\r\n    - Posting a File\r\n    - Posting form parameters\r\n    - Posting a multipart request\r\n    - Parse a JSON Response With Gson\r\n    - Response Caching\r\n    - Canceling a Call\r\n- Tests\r\n","starsCount":1,"created":"2015-10-19T09:04:17.172Z","modified":"2017-03-13T07:38:36.294Z","lastPublisher":{"name":"kstanoev","email":"kiril.stanoev@gmail.com"},"owners":[{"name":"tns-bot","email":"nativescript@telerik.com"}],"other":{"_attachments":{},"_from":".","_id":"nativescript-okhttp","_nodeVersion":"0.12.7","_npmUser":{"name":"kstanoev","email":"kiril.stanoev@gmail.com"},"_npmVersion":"2.11.3","_rev":"4-46ccdaf81907d744aadb9bc382b96310","_shasum":"31ae24d192e1c102483d926d10204b96a033c107","author":{"name":"Kiril Stanoev","email":"kiril.stanoev@gmail.com","url":"https://github.com/kiril-stanoev/"},"bugs":{"url":"https://github.com/kiril-stanoev/nativescript-okhttp/issues"},"directories":{},"dist-tags":{"latest":"0.0.8"},"dist":{"shasum":"31ae24d192e1c102483d926d10204b96a033c107","tarball":"http://registry.npmjs.org/nativescript-okhttp/-/nativescript-okhttp-0.0.8.tgz"},"maintainers":[{"name":"tns-bot","email":"nativescript@telerik.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-13T07:38:36.294Z","created":"2015-10-19T09:04:17.172Z","0.0.1":"2015-10-19T09:04:17.172Z","0.0.2":"2015-10-19T09:11:29.741Z","0.0.3":"2015-10-19T09:30:08.741Z","0.0.5":"2015-10-19T10:05:58.859Z","0.0.6":"2015-10-19T12:00:11.764Z","0.0.7":"2015-10-19T17:19:59.424Z","0.0.8":"2015-10-21T05:55:28.096Z"},"users":{"fadihania":true}}}