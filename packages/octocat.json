{"name":"octocat","version":"1.1.0","description":"GitHub API client in Javascript","main":"./lib/index.js","repository":"https://github.com/SamyPesse/octocat.js","dependencies":{"deprecate":"^1.0.0","is":"^3.2.0","is-absolute-url":"^2.1.0","js-base64":"^2.1.9","mime-types":"^2.1.4","progress-stream":"^1.1.1","q":"^1.4.1","request":"2.64.0","url-join":"^1.1.0"},"devDependencies":{"babel-cli":"^6.22.2","babel-preset-es2015":"^6.22.0","babel-preset-stage-0":"^6.22.0","eslint":"^3.13.1","eslint-config-gitbook":"^1.5.0","expect":"^1.20.2","mocha":"^3.2.0"},"scripts":{"prepublish":"babel --out-dir ./lib ./src","test":"mocha --compilers js:babel-core/register --reporter spec --bail --timeout 15000"},"license":"Apache-2.0","gitHead":"a0293cd680581b2bc75a209a1fcecee64e60dfad","homepage":"https://github.com/SamyPesse/octocat.js#readme","versions":[{"number":"1.0.0","date":"2015-08-19T13:36:52.361Z"},{"number":"0.1.0","date":"2015-08-19T20:46:11.837Z"},{"number":"0.2.0","date":"2015-08-19T22:44:50.766Z"},{"number":"0.2.1","date":"2015-08-21T07:34:03.317Z"},{"number":"0.2.2","date":"2015-08-21T08:15:59.430Z"},{"number":"0.3.0","date":"2015-09-08T09:41:22.813Z"},{"number":"0.3.1","date":"2015-09-30T20:03:46.746Z"},{"number":"0.3.2","date":"2015-10-01T18:57:39.699Z"},{"number":"0.4.0","date":"2015-10-21T07:58:23.995Z"},{"number":"0.5.0","date":"2015-10-22T08:16:35.490Z"},{"number":"0.6.0","date":"2015-12-15T20:56:29.645Z"},{"number":"0.7.0","date":"2016-01-25T13:50:04.322Z"},{"number":"0.8.0","date":"2016-01-25T13:53:17.647Z"},{"number":"0.9.0","date":"2016-02-05T21:01:28.358Z"},{"number":"0.10.0","date":"2016-02-05T21:43:40.394Z"},{"number":"0.10.1","date":"2016-02-05T21:51:54.559Z"},{"number":"0.10.2","date":"2016-02-06T13:47:58.752Z"},{"number":"0.11.0","date":"2016-03-21T09:56:11.810Z"},{"number":"0.11.1","date":"2016-12-05T20:48:59.083Z"},{"number":"0.12.0","date":"2016-12-23T17:27:41.489Z"},{"number":"0.12.1","date":"2017-01-11T10:16:02.919Z"},{"number":"1.0.1","date":"2017-01-20T22:21:16.134Z"},{"number":"1.0.2","date":"2017-01-20T22:33:48.116Z"},{"number":"1.0.3","date":"2017-01-20T22:57:31.621Z"},{"number":"1.0.4","date":"2017-01-20T23:18:12.380Z"},{"number":"1.0.5","date":"2017-02-09T16:54:10.807Z"},{"number":"1.0.6","date":"2017-02-27T14:20:27.134Z"},{"number":"1.1.0","date":"2017-02-28T10:30:39.327Z"}],"readme":"# octocat.js\n\n[![npm version](https://badge.fury.io/js/octocat.svg)](http://badge.fury.io/js/octocat)\n[![Build Status](https://travis-ci.org/SamyPesse/octocat.js.png?branch=master)](https://travis-ci.org/SamyPesse/octocat.js)\n\nJavascript library to access the GitHub API.\n\n- ✨ Promise based\n- ✨ Support GitHub Enterprise\n- ✨ Easy handling of paginated results\n\n### Installation\n\n```\n$ npm install octocat --save\n```\n\n### Usage\n\n#### Create an API client\n\n```js\nconst GitHub = require('octocat');\n\n// Using an access token\nconst client = new GitHub({\n    token: 'my-access-token'\n});\n\n// Using an username/password\nconst client = new GitHub({\n    username: 'SamyPesse',\n    password: 'my-password'\n});\n\n// Connecting to an enterprise version\nconst client = new GitHub({\n    endpoint: 'https:///github.mycompany.com'\n});\n```\n\n#### HTTP API access\n\nAll of these methods return promises.\n\n```js\nclient.request('GET', '/repos/SamyPesse/octocat.js', { /* query/body parameters */})\n\nclient.get('/repos/SamyPesse/octocat.js', { /* query parameters */})\nclient.post('/repos/SamyPesse/octocat.js', { /* body parameters */})\nclient.patch('/repos/SamyPesse/octocat.js', { /* body parameters */})\nclient.put('/repos/SamyPesse/octocat.js', { /* body parameters */})\nclient.del('/repos/SamyPesse/octocat.js', { /* body parameters */})\n```\n\nThese methods return a `response` object that looks like:\n\n```js\n{\n    // HTTP Status code\n    statusCode: 200,\n\n    // Type of status: 2XX, 3XX, 4xx\n    statusType: '2XX',\n\n    // Headers returned by the server\n    headers: { ... },\n\n    // Body of the request\n    body: { ... }\n}\n```\n\nIn case of error, the response can also be accessible using as a `response` property.\n\n#### Pagination\n\nSome methods of Octonode return paginated results. Check on GitHub which API methods are paginated.\n\nThese methods return a `Page` object:\n\n- `page.list` contains the list of results in the current page\n- `page.next()` update with the results of the next page (Promised)\n- `page.prev()` update with the results of the previous page (Promised)\n- `page.hasNext()` and `page.hasPrev()`\n- `page.all()` return all the results by recursively calling the API\n\n#### Users\n\n```js\n// Get a single user\nconst user = client.user('SamyPesse');\nuser.info().then(function(infos) { ... });\n\n// Get the authenticated user\nconst user = client.me();\n\n// Edit the authenticated user\nuser.edit({\n    name: \"New Name\"\n})\n```\n\n#### Repositories\n\n```js\n// Create a new repository\nclient.createRepo({ ... }).then(function() { });\n\n// Get public repositories (paginated)\nclient.repos().then(function(page) { ... });\n\n// List user repositories\nuser.repos().then(function(page) { ... });\n\n// Get a single repository\nconst repo = client.repo('SamyPesse/octocat.js');\nrepo.info().then(function(infos) { ... });\n\n// Compare two commits\nrepo.compare('master', 'dev').then(function(infos) { ... });\n\n// Perform a merge\nrepo.merge({ base: 'master', head: 'dev' }).then(function() { ... });\n\n// Delete the repository\nrepo.destroy()\n```\n\n#### Issues\n\n```js\n// List issues for a repository\nrepo.issues().then(function(page) { ... });\n\n// Create an issue in a repository\nrepo.createIssue({\n    title: \"An awesome issue\"\n});\n\n// Get a single issue in a repository\nconst issue = repo.issue(200);\nissue.info().then(function(infos) { ... });\n\n// Edit an issue\nissue.edit({\n    title: \"New Title\"\n})\n```\n\n#### Organization\n\n```js\n// List organizations of an user\nuser.orgs().then(function(orgs) { ... });\n\n// Check an user's membership to an organization\nuser.getOrgMembership('organization').then(function(membership) { ... });\n\n// List an user's memberships to all of his organizations\nuser.getOrgsMemberships({ state: 'active' }).then(function(page) { ... });\n\n// Get a single organization\nconst org = client.org('GitbookIO');\norg.info().then(function(infos) { ... });\n\n// Edit the organization\norg.edit({\n    name: \"The new name\"\n})\n\n// List members of the organization\norg.members().then(function(page) { ... });\n\n// Create a new repository\norg.createRepo({ ... }).then(function() { });\n```\n\n#### Commits\n\n```js\n// List commits for a repository\nrepo.commits().then(function(commits) { ... });\n\n// Get a single commit\nconst commit = repo.commit('6dcb09b5b57875f334f61aebed695e2e4193db5e');\ncommit.info().then(function(infos) { ... });\n```\n\n#### Statuses\n\n```js\n// Create a Status\nrepo.createStatus('sha', { ... }).then(function() { ... });\n\n// List Statuses for a specific Ref\ncommit.statuses().then(function(statuses) { ... });\n```\n\n#### Branches\n\n```js\n// List branches for a repository\nrepo.branches().then(function(branches) { ... });\n\n// Get a single branch\nconst branch = repo.branch('master');\nbranch.info().then(function(infos) { ... });\n```\n\n#### Tags\n\n```js\n// List tags for a repository\nrepo.tags().then(function(tags) { ... });\n```\n\n#### Webhooks\n\n```js\n// List hooks for a repository\nrepo.hooks().then(function(hooks) { ... });\n\n// Get a single hook\nconst hook = repo.hook('1');\nhook.info().then(function(infos) { ... });\n\n// Edit a hook\nhook.edit({\n    name: \"Test\"\n})\n\n// Delete the hook\nhook.destroy()\n```\n\n#### Releases\n\n```js\n// List releases of a repository\nrepo.releases().then(function(assets) { ... });\n\n// Get details about the release\nconst release = repo.release('1');\nrelease.info().then(function(infos) { ... });\n\n// Edit a release\nrelease.edit({\n    name: \"Test\"\n})\n\n// Delete the release\nrelease.destroy()\n```\n\n#### Uploading assets\n\n```js\n// Upload a new asset as file/stream\nrelease.upload('./myfile.zip').then(function() { ... });\nrelease.upload(stream, { name: \"myfile.zip\" }).then(function() { ... });\n```\n\n`release.upload` will also notify with progress:\n\n```js\nrelease.upload('./myfile.zip')\n.progress((p) => {\n    /*\n    { percentage: 96.61881065572815,\n      transferred: 45088768,\n      length: 46666656,\n      remaining: 1577888,\n      eta: 0,\n      runtime: 11,\n      delta: 196608,\n      speed: 3920762.434782609 }\n    */\n})\n.then(() => {\n\n});\n\n```\n\n#### Releases Assets\n\n```js\n// List assets of a release\nrelease.assets().then(function(assets) { ... });\n\n// Get details about the release\nconst asset = release.asset('1');\nasset.info().then(function(infos) { ... });\n\n// Download the asset to a file\nasset.download('./myfile.zip').then(function() { ... });\n\n// Download the asset to a stream\nasset.download(stream).then(function() { ... });\n\n// Delete the asset\nasset.destroy()\n```\n\n#### Emails\n\n```js\n// List email addresses\nclient.userEmails().then(function(emails) { ... });\n\n// Add email address(es)\nclient.addUserEmails([ 'octocat@github.com' ]).then(function() { ... });\n\n// Delete email address(es)\nclient.deleteUserEmails([ 'octocat@github.com' ]).then(function() { ... });\n```\n\n#### Authorization for a specific app\n\n```js\nconst app = client.application('clientId');\nconst token = app.token('access_token');\n\n// Check an authorization\ntoken.info().then(function(infos) { ... });\n\n// Reset an authorization\ntoken.reset().then(function() { ... });\n\n// Delete an authorization\ntoken.destroy().then(function() { ... });\n```\n\n#### Git Data\n\n###### Reference\n\n```js\nconst ref = repo.gitRef('heads/master');\n\n// Get a reference\nref.info().then(function(infos) { ... });\n\n// Edit / Delete\nref.edit({ ... }).then(function() { ... });\nref.destroy().then(function() { ... });\n```\n\n###### Commit\n\n```js\nconst commit = repo.gitCommit('<sha>');\n\n// Get a commit\ncommit.info().then(function(infos) { ... });\n```\n\n#### Rate Limiting\n\nYou can also check your rate limit status by calling the following.\n\n```js\nclient.limit().then(function(rate) { ... })\n```\n","starsCount":2,"created":"2015-08-19T13:36:52.361Z","modified":"2017-02-28T10:30:39.327Z","lastPublisher":{"name":"samypesse","email":"samypesse@gmail.com"},"owners":[{"name":"samypesse","email":"samypesse@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"octocat","_nodeVersion":"7.3.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/octocat-1.1.0.tgz_1488277838662_0.8151112147606909"},"_npmUser":{"name":"samypesse","email":"samypesse@gmail.com"},"_npmVersion":"3.10.10","_rev":"11-c563d95a9861683d772feba31207218b","_shasum":"d43fa045101909573f3acba7687424243c3e9718","author":{"name":"Samy Pesse","email":"samypesse@gmail.com"},"bugs":{"url":"https://github.com/SamyPesse/octocat.js/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"d43fa045101909573f3acba7687424243c3e9718","tarball":"https://registry.npmjs.org/octocat/-/octocat-1.1.0.tgz"},"maintainers":[{"name":"samypesse","email":"samypesse@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-28T10:30:39.327Z","created":"2015-08-19T13:36:52.361Z","1.0.0":"2015-08-19T13:36:52.361Z","0.1.0":"2015-08-19T20:46:11.837Z","0.2.0":"2015-08-19T22:44:50.766Z","0.2.1":"2015-08-21T07:34:03.317Z","0.2.2":"2015-08-21T08:15:59.430Z","0.3.0":"2015-09-08T09:41:22.813Z","0.3.1":"2015-09-30T20:03:46.746Z","0.3.2":"2015-10-01T18:57:39.699Z","0.4.0":"2015-10-21T07:58:23.995Z","0.5.0":"2015-10-22T08:16:35.490Z","0.6.0":"2015-12-15T20:56:29.645Z","0.7.0":"2016-01-25T13:50:04.322Z","0.8.0":"2016-01-25T13:53:17.647Z","0.9.0":"2016-02-05T21:01:28.358Z","0.10.0":"2016-02-05T21:43:40.394Z","0.10.1":"2016-02-05T21:51:54.559Z","0.10.2":"2016-02-06T13:47:58.752Z","0.11.0":"2016-03-21T09:56:11.810Z","0.11.1":"2016-12-05T20:48:59.083Z","0.12.0":"2016-12-23T17:27:41.489Z","0.12.1":"2017-01-11T10:16:02.919Z","1.0.1":"2017-01-20T22:21:16.134Z","1.0.2":"2017-01-20T22:33:48.116Z","1.0.3":"2017-01-20T22:57:31.621Z","1.0.4":"2017-01-20T23:18:12.380Z","1.0.5":"2017-02-09T16:54:10.807Z","1.0.6":"2017-02-27T14:20:27.134Z","1.1.0":"2017-02-28T10:30:39.327Z"},"users":{"samypesse":true,"gitbook":true}}}