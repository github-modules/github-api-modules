{"name":"badge","version":"1.0.3","description":"Stateless GitHub authentication for Hapi.","main":"lib/github","scripts":{"coverage":"gulp coverage && xdg-open coverage.html || open coverage.html","test":"gulp"},"repository":"https://github.com/jagoda/badge","keywords":["hapi","github","auth"],"license":"MIT","homepage":"https://github.com/jagoda/badge","devDependencies":{"gulp":"^3.8.6","gulp-jshint":"^1.7.1","gulp-lab":"0.0.10","jshint-stylish":"^0.4.0","lab":"^3.2.1","nock":"^0.42.2","sinon":"^1.10.3"},"dependencies":{"hapi":"^6.2.1","joi":"^4.6.2","lodash":"^2.4.1","lru-cache":"^2.5.0","nipple":"^2.5.3","q":"^1.0.1"},"versions":[{"number":"0.0.0","date":"2014-07-24T15:59:18.123Z"},{"number":"0.1.0","date":"2014-07-28T18:52:24.070Z"},{"number":"0.1.1","date":"2014-08-04T19:29:46.034Z"},{"number":"0.2.0","date":"2014-08-05T20:22:17.480Z"},{"number":"0.2.1","date":"2014-08-06T14:21:06.225Z"},{"number":"1.0.0","date":"2014-08-06T15:31:55.424Z"},{"number":"1.0.1","date":"2014-08-06T16:41:42.310Z"},{"number":"1.0.2","date":"2014-08-06T17:08:17.523Z"},{"number":"1.0.3","date":"2014-08-07T14:39:24.856Z"}],"readme":"badge\n=====\n\n[![Build Status](https://travis-ci.org/jagoda/badge.svg?branch=master)](https://travis-ci.org/jagoda/badge)\n\n> Stateless GitHub auth for [Hapi][hapi].\n\n## Overview\n\nThis plugin provides two authentication schemes for [Hapi][hapi]: `github-basic`\nand `github-token`. The basic scheme accepts GitHub usernames and passwords\nas HTTP Basic Auth credentials. The token scheme accepts GitHub application\ntokens via headers of the form `Authorization: token <token>`. The basic scheme\nis also capable of generating access tokens if configured with a client ID and\nsecret. Similarly, the token scheme is capable of verifying that a token owner\nbelongs to a specified organization.\n\n## Basic Auth\n\n### Pass Through Mode\n\nBy default, the basic auth scheme will pass the `Authentication` header through\nto GitHub and add the authenticated `username` to the `credentials` object if\naccepted.\n\n\tserver.auth.strategy(\"basic\", \"github-basic\");\n\n### Token Generation\n\nIf the basic scheme is configured with a client ID and secret, then a valid\nlogin attempt will generate a new token that is added to the `artifacts` object\nreturned by [Hapi][hapi].\n\n\tserver.auth.strategy(\"generate-token\", \"github-basic\", {\n\t\tapplication : {\n\t\t\tclientId     : <client ID>,\n\t\t\tclientSecret : <client secret>,\n\t\t\tnote         : <a description>,\n\t\t\tscopes       : <desired scopes>,\n\t\t\turl          : <a note URL>\n\t\t}\n\t});\n\n### Organization Membership\n\nIf the basic scheme is configured with an organization name, then authenticated\nusers will be required to be a member of the specified organization. When\ngenerating tokens, the token will only be requested if the user has been\nauthenticated and also belongs to the specified organization.\n\n\tserver.auth.strategy(\"basic-org\", \"github-basic\", {\n\t\torganization : <org name>\n\t});\n\n## Token Auth\n\n### Simple Validation\n\nBy default, the token scheme will simply verify that the supplied token is\nvalid.\n\n\tserver.auth.strategy(\"token\", \"github-token\", {\n\t\tclientId     : <client ID>,\n\t\tclientSecret : <client secret>\n\t});\n\n### Organization Membership\n\nIf the token scheme is configured with an organization name, then any valid\ntokens will also be required to be authorized with the specified organization.\n\n\tserver.auth.strategy(\"token-org\", \"github-token\", {\n\t\tclientId     : <client ID>,\n\t\tclientSecret : <client secret>,\n\t\torganization : <org name>\n\t});\n\n## Realms\n\nBoth authentication methods are capable of including a realm with the\nauthentication challenge. To include a realm, simply supply a realm as part of\nthe strategy configuration:\n\n\tserver.auth.strategy(\"realm\", \"github-basic\", {\n\t\trealm : <realm>\n\t});\n\n[Hapi]: https://github.com/spumko/hapi \"Hapi\"\n","created":"2014-07-24T15:59:18.123Z","modified":"2014-08-07T14:39:24.856Z","lastPublisher":{"name":"jagoda","email":"jeffrey.jagoda@gmail.com"},"owners":[{"name":"jagoda","email":"jeffrey.jagoda@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"badge","_npmUser":{"name":"jagoda","email":"jeffrey.jagoda@gmail.com"},"_npmVersion":"1.4.9","_rev":"1-cc88076ec9ccfdcddb039fa7f6b89bc5","_shasum":"51942b5f9cb1712d3625884b69107e246e0638c5","author":{"name":"Jeff Jagoda","email":"jeffrey.jagoda@gmail.com"},"bugs":{"url":"https://github.com/jagoda/badge/issues"},"directories":{},"dist-tags":{"latest":"1.0.3"},"dist":{"shasum":"51942b5f9cb1712d3625884b69107e246e0638c5","tarball":"http://registry.npmjs.org/badge/-/badge-1.0.3.tgz"},"maintainers":[{"name":"jagoda","email":"jeffrey.jagoda@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-08-07T14:39:24.856Z","created":"2014-07-24T15:59:18.123Z","0.0.0":"2014-07-24T15:59:18.123Z","0.1.0":"2014-07-28T18:52:24.070Z","0.1.1":"2014-08-04T19:29:46.034Z","0.2.0":"2014-08-05T20:22:17.480Z","0.2.1":"2014-08-06T14:21:06.225Z","1.0.0":"2014-08-06T15:31:55.424Z","1.0.1":"2014-08-06T16:41:42.310Z","1.0.2":"2014-08-06T17:08:17.523Z","1.0.3":"2014-08-07T14:39:24.856Z"}}}