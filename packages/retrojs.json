{"name":"retrojs","version":"1.0.4","description":"RetroJS is a simple HTTP Client for JavaScript  that heavily uses ES2016 decorators. Inspired by [Retrofit](http://square.github.io/retrofit/)","main":"dist/retroJS.js","typings":"dist/retroJS.d.ts","scripts":{"test":"echo \"Error: no test specified\" && exit 1","build":"tsc -w -p .","buildExamples":"tsc -w -p ./examples"},"repository":"https://github.com/benjaminRomano/retroJS","keywords":[],"license":"MIT","homepage":"https://github.com/benjaminRomano/retroJS#readme","dependencies":{"reflect-metadata":"^0.1.3","request":"^2.72.0"},"gitHead":"7ca931b472d260a1e829f9f58fdaee10606d6f4d","versions":[{"number":"1.0.0","date":"2016-04-28T01:48:48.743Z"},{"number":"1.0.1","date":"2016-04-28T02:04:30.397Z"},{"number":"1.0.2","date":"2016-04-28T02:18:26.383Z"},{"number":"1.0.3","date":"2016-04-28T09:20:19.135Z"},{"number":"1.0.4","date":"2016-04-29T04:18:26.154Z"}],"readme":"# RetroJS\r\n\r\nRetroJS is a simple HTTP Client for JavaScript  that heavily uses ES2016 decorators. Inspired by [Retrofit](http://square.github.io/retrofit/)\r\n\r\n#### Example\r\n``` ts\r\nimport * as request from 'request';\r\nimport * as RetroJS from 'retrojs';\r\n\r\nconst {RetroBuilder, RetroClient} = RetroJS;\r\nconst {GET, POST, DELETE, PUT, Body, Path, Query} = RetroJS.decorators;\r\n\r\nclass GithubService {\r\n    @GET('users/{user}/repos?sort=pushed')\r\n    listRepos( @Path('user') user: string, @Query('type') type: string): RetroJS.ICall<any[]> {\r\n        return null;\r\n    }\r\n}\r\n\r\n// Optional: Use a custom client\r\nconst client: RetroJS.IHttpClient = new RetroClient(request.defaults({\r\n    headers: {\r\n        'User-Agent': 'request'\r\n    }\r\n}));\r\n\r\nconst retro = new RetroBuilder()\r\n    .client(client)\r\n    .baseUrl('https://api.github.com/')\r\n    .build();\r\n\r\n// Use the Retro instance to instantiate the class\r\nconst githubService = retro.create(GithubService);\r\n\r\nconst call = githubService.listRepos('benjaminRomano', 'owner');\r\n\r\ncall.execute().then(result => {\r\n    console.log(result.body.length);\r\n});\r\n```\r\n\r\n\r\n#### Decorators\r\n\r\n``` ts\r\n/* Method Decorators */\r\n@POST('path')\r\n@GET('path')\r\n@DELETE('path')\r\n@PUT('path')\r\n@Headers({ 'User-Agent': 'request' })\r\n\r\n/* Parameter Decorators */\r\nsomeFunction(@Body body: any);\r\nsomeFunction(@Query('type') type: string);\r\nsomeFunction(@Path('user') user: string);\r\nsomeFunction(@Header('Cache-Control') cacheControl: string); // Note: values in @Header take precedence over @Headers\r\nsomeFunction(@Field('fieldName') value: string);\r\n```","created":"2016-04-28T01:48:48.743Z","modified":"2016-04-29T04:18:26.154Z","lastPublisher":{"name":"benjaminromano","email":"bromano2100@gmail.com"},"owners":[{"name":"benjaminromano","email":"bromano2100@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"retrojs","_nodeVersion":"6.0.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/retrojs-1.0.4.tgz_1461903503962_0.9522991934791207"},"_npmUser":{"name":"benjaminromano","email":"bromano2100@gmail.com"},"_npmVersion":"3.8.6","_rev":"1-1a767d0437e257c2ba28393c1b90c4d0","_shasum":"45b4aea2d98e5780fbd972c2b28069f638696082","author":{"name":"Benjamin Romano"},"bugs":{"url":"https://github.com/benjaminRomano/retroJS/issues"},"directories":{},"dist-tags":{"latest":"1.0.4"},"dist":{"shasum":"45b4aea2d98e5780fbd972c2b28069f638696082","tarball":"http://registry.npmjs.org/retrojs/-/retrojs-1.0.4.tgz"},"maintainers":[{"name":"benjaminromano","email":"bromano2100@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-04-29T04:18:26.154Z","created":"2016-04-28T01:48:48.743Z","1.0.0":"2016-04-28T01:48:48.743Z","1.0.1":"2016-04-28T02:04:30.397Z","1.0.2":"2016-04-28T02:18:26.383Z","1.0.3":"2016-04-28T09:20:19.135Z","1.0.4":"2016-04-29T04:18:26.154Z"}}}