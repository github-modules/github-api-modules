{"name":"github-client","version":"0.8.0","description":"Javascript github client for nodejs or a web browser using promises","main":"github.js","dependencies":{"underscore":">=1.4.2","jquery-deferred":">=0.3.0","najax":"git://github.com/philschatz/najax.git"},"devDependencies":{"docco":"~0.4.0"},"repository":"https://github.com/philschatz/github-client","keywords":["javascript","github","client","promise"],"readme":"# Github.js\n\nGithub.js provides a minimal higher-level wrapper around git's [plumbing commands](http://git-scm.com/book/en/Git-Internals-Plumbing-and-Porcelain), exposing an API for manipulating GitHub repositories on the file level. It is being developed in the context of [github-book](http://github.com/philschatz/github-book), an EPUB3 editor for GitHub.\n\nThis package can also be used in nodejs or as a requirejs module.\n\n## Usage\n\n### In a browser without requirejs\n\nCreate a Github instance.\n\n```js\nvar github = new Github({\n  username: \"YOU_USER\",\n  password: \"YOUR_PASSWORD\",\n  auth: \"basic\"\n});\n```\n\nOr if you prefer OAuth, it looks like this:\n\n```js\nvar github = new Github({\n  token: \"OAUTH_TOKEN\"\n  auth: \"oauth\"\n});\n```\n\n### In a browser using requirejs\n\n```js\ndefine(['github-js'], function(Github) {\n  github = new Github({\n    username: \"YOU_USER\",\n    password: \"YOUR_PASSWORD\",\n    auth: \"basic\"\n  });\n});\n```\n\n### In Nodejs\n\nInstall instructions:\n\n    npm install github-js\n\n```js\nvar Github = require('github-js');\nvar github = Github.new({\n  username: \"YOU_USER\",\n  password: \"YOUR_PASSWORD\",\n  auth: \"basic\"\n});\n```\n\n\n## Repository API\n\n\n```js\nvar repo = github.getRepo(username, reponame);\n```\n\nShow repository information\n\n```js\nrepo.show()\n.done(function(repo) {})\n.fail(function(err)  {});\n```\n\nGet contents at a particular path.\n\n```js\nrepo.contents(\"path/to/dir\")\n.done(function(contents) {});\n```\n\nFork repository. This operation runs asynchronously. You may want to poll for `repo.contents` until the forked repo is ready.\n\n```js\nrepo.fork()\n.done(function() {})\n.fail(function(err) {});\n```\n\nCreate Pull Request.\n\n```js\nvar pull = {\n  title: message,\n  body: \"This pull request has been automatically generated.\",\n  base: \"gh-pages\",\n  head: \"michael\" + \":\" + \"prose-patch\",\n};\nrepo.createPullRequest(pull)\n.done(function(pullRequest) {})\n.fail(function(err) {});\n```\n\n\nRetrieve all available branches (aka heads) of a repository.\n\n```js\nrepo.listBranches()\n.done(function(branches) {})\n.fail(function(err) {});\n```\n\nStore contents at a certain path, where files that don't yet exist are created on the fly.\n\n```js\nrepo.write('master', 'path/to/file', 'YOUR_NEW_CONTENTS', 'YOUR_COMMIT_MESSAGE')\n.done(function() {})\n.fail(function(err) {});\n```\n\nNot only can you can write files, you can of course read them.\n\n```js\nrepo.read('master', 'path/to/file')\n.done(function(data) {})\n.fail(function(err) {});\n```\n\nYou can also read binary files.\n\n```js\nrepo.readBinary('master', 'path/to/binaryfile')\n.done(function(data) {})\n.fail(function(err) {});\n```\n\n\nMove a file from A to B.\n\n```js\nrepo.move('master', 'path/to/file', 'path/to/new_file')\n.done(function() {})\n.fail(function(err) {});\n```\n\nRemove a file.\n\n```js\nrepo.remove('master', 'path/to/file')\n.done(function() {})\n.fail(function(err) {});\n```\n\nExploring files of a repository is easy too by accessing the top level tree object.\n\n```js\nrepo.getTree('master')\n.done(function(tree) {})\n.fail(function(err) {});\n```\n\nIf you want to access all blobs and trees recursively, you can add `?recursive=true`.\n\n```js\nrepo.getTree('master?recursive=true')\n.done(function(tree) {})\n.fail(function(err) {});\n```\n\nGiven a filepath, retrieve the reference blob or tree sha.\n\n```js\nrepo.getSha('master', '/path/to/file')\n.done(function(sha) {})\n.fail(function(err) {});\n```\n\nFor a given reference, get the corresponding commit sha.\n\n```js\nrepo.getRef('heads/master')\n.done(function(sha) {})\n.fail(function(err) {});\n```\n\nCreate a new reference.\n\n```js\nvar refSpec = {\n  \"ref\": \"refs/heads/my-new-branch-name\",\n  \"sha\": \"827efc6d56897b048c772eb4087f854f46256132\"\n};\nrepo.createRef(refSpec)\n.done(function() {})\n.fail(function(err) {});\n```\n\nDelete a reference.\n\n```js\nrepo.deleteRef('heads/gh-pages')\n.done(function() {})\n.fail(function(err) {});\n```\n\n\n## User API\n\n\n```js\nvar user = github.getUser();\n```\n\nList all repositories of the authenticated user.\n\n```js\nuser.repos(username)\n.done(function(repos) {})\n.fail(function(err) {});\n```\n\nList organizations the autenticated user belongs to.\n\n```js\nuser.orgs()\n.done(function(orgs) {})\n.fail(function(err) {});\n```\n\nList authenticated user's gists.\n\n```js\nuser.gists(username)\n.done(function(gists) {})\n.fail(function(err) {});\n```\n\nShow user information for a particular username. Also works for organizations.\n\n```js\nuser.show(username)\n.done(function(user) {})\n.fail(function(err) {});\n```\n\nList public repositories for a particular user.\n\n```js\nuser.userRepos(username)\n.done(function(repos) {})\n.fail(function(err) {});\n```\n\nList repositories for a particular organization. Includes private repositories if you are authorized.\n\n```js\nuser.orgRepos(orgname)\n.done(function(repos) {})\n.fail(function(err) {});\n```\n\nList all gists of a particular user. If username is ommitted gists of the current authenticated user are returned.\n\n```js\nuser.userGists(username)\n.done(function(gists) {})\n.fail(function(err) {});\n```\n\n## Gist API\n\n```js\nvar gist = github.getGist(3165654);\n```\n\nRead the contents of a Gist.\n\n```js\ngist.read()\n.done(function(gist) {})\n.fail(function(err) {});\n```\n\nUpdating the contents of a Git. Please consult the documentation on [GitHub](http://developer.github.com/v3/gists/).\n\n```js\nvar delta = {\n  \"description\": \"the description for this gist\",\n  \"files\": {\n    \"file1.txt\": {\n      \"content\": \"updated file contents\"\n    },\n    \"old_name.txt\": {\n      \"filename\": \"new_name.txt\",\n      \"content\": \"modified contents\"\n    },\n    \"new_file.txt\": {\n      \"content\": \"a new file\"\n    },\n    \"delete_this_file.txt\": null\n  }\n};\n\ngist.update(delta)\n.done(function(gist) {})\n.fail(function(err) {});\n```\n\n\n##Setup\n\nGithub.js has the following dependencies:\n\n- Underscore\n- Base64 (for basic auth). You can leave this if you are not using basic auth.\n\nInclude these before github.js :\n\n```\n<script src=\"lib/underscore-min.js\">\n<script src=\"lib/base64.js\">\n<script src=\"github.js\">\n```\n\n## Change Log\n\n\n### 0.7.X\n\nSwitched to a native `request` implementation (thanks @mattpass). Adds support for GitHub gists, forks and pull requests.\n\n### 0.6.X\n\nAdds support for organizations and fixes an encoding issue.\n\n### 0.5.X\n\nSmart caching of latest commit sha.\n\n### 0.4.X\n\nAdded support for [OAuth](http://developer.github.com/v3/oauth/).\n\n### 0.3.X\n\nSupport for Moving and removing files.\n\n### 0.2.X\n\nConsider commit messages.\n\n### 0.1.X\n\nInitial version.\n","versions":[{"number":"0.1.3","date":"2013-04-06T22:31:26.778Z"},{"number":"0.1.4","date":"2013-07-14T06:55:14.513Z"},{"number":"0.1.5","date":"2013-07-21T05:07:14.269Z"},{"number":"0.1.6","date":"2013-07-21T23:27:21.807Z"},{"number":"0.1.7","date":"2013-07-30T03:46:06.199Z"},{"number":"0.8.0","date":"2013-07-30T04:15:57.139Z"}],"starsCount":1,"created":"2013-04-06T22:31:25.753Z","modified":"2013-07-30T04:15:57.139Z","lastPublisher":{"name":"philschatz","email":"phil@cnx.org"},"owners":[{"name":"philschatz","email":"phil@cnx.org"}],"other":{"_attachments":{},"_from":".","_id":"github-client","_npmUser":{"name":"philschatz","email":"phil@cnx.org"},"_npmVersion":"1.2.32","_rev":"1-21f1ad917ebe916f564e3f1cbfa8dd37","author":{"name":"Philip Schatz"},"bugs":{"url":"https://github.com/philschatz/github-client/issues"},"directories":{},"dist-tags":{"latest":"0.8.0"},"dist":{"shasum":"9061d4f23cbf6556b946f216135e0d5abddcf5fb","tarball":"http://registry.npmjs.org/github-client/-/github-client-0.8.0.tgz"},"maintainers":[{"name":"philschatz","email":"phil@cnx.org"}],"readmeFilename":"README.md","time":{"modified":"2013-07-30T04:15:57.139Z","created":"2013-04-06T22:31:25.753Z","0.1.3":"2013-04-06T22:31:26.778Z","0.1.4":"2013-07-14T06:55:14.513Z","0.1.5":"2013-07-21T05:07:14.269Z","0.1.6":"2013-07-21T23:27:21.807Z","0.1.7":"2013-07-30T03:46:06.199Z","0.8.0":"2013-07-30T04:15:57.139Z"},"users":{"tommychang1983":true}}}