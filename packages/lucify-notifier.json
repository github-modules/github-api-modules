{"name":"lucify-notifier","license":"UNLICENSED","version":"0.1.16","description":"Integrates with the GitHub deployments API and Flowdock","main":"index.js","scripts":{"test":"mocha --require ts-node/register --timeout 20000 --watch-extensions ts test/tests.ts","integration-test":"mocha --require ts-node/register --watch-extensions ts test/integration-tests.ts","compile":"tsc","prepublish":"npm run compile","lint":"tslint --format=verbose --project ."},"engines":{"node":">6.0.0"},"homepage":"https://gitub.com/lucified/lucify-notifier","repository":"https://github.com/lucified/lucify-notifier","devDependencies":{"@types/aws-sdk":"0.0.42","@types/bluebird":"^3.5.3","@types/chai":"^3.4.35","@types/chalk":"^0.4.31","@types/commander":"^2.3.31","@types/debug":"0.0.29","@types/lodash":"^4.14.64","@types/mocha":"^2.2.41","@types/node":"^7.0.18","@types/request":"0.0.42","@types/request-promise":"^3.0.31","chai":"^3.5.0","lucify-deploy-config":"^0.1.11","mocha":"^3.2.0","ts-node":"^3.0.4","tslint":"^5.2.0","typescript":"^2.3.2"},"dependencies":{"aws-sdk":"^2.32.0","bluebird":"^3.5.0","chalk":"^1.1.3","commander":"^2.9.0","debug":"^2.6.6","git-last-commit":"^0.2.0","jws":"^3.1.4","lodash":"^4.17.4","node-uuid":"^1.4.8","pkginfo":"^0.4.0","request":"^2.81.0","request-promise":"^4.2.1"},"bin":{"lucify-notifier":"lib/src/index.js"},"gitHead":"983fdc7643f9630930f9fa55aa4324ca173af678","versions":[{"number":"0.0.2","date":"2016-09-21T17:51:25.759Z"},{"number":"0.1.0","date":"2016-09-21T18:15:49.059Z"},{"number":"0.1.1","date":"2016-09-23T10:36:09.890Z"},{"number":"0.1.2","date":"2016-09-29T18:00:51.130Z"},{"number":"0.1.3","date":"2016-09-30T10:46:44.394Z"},{"number":"0.1.4","date":"2016-09-30T11:18:11.750Z"},{"number":"0.1.5","date":"2016-10-10T12:42:18.573Z"},{"number":"0.1.6","date":"2016-10-10T19:24:38.033Z"},{"number":"0.1.7","date":"2016-10-10T20:15:25.617Z"},{"number":"0.1.8","date":"2016-10-10T20:33:17.042Z"},{"number":"0.1.9","date":"2016-10-11T10:10:40.670Z"},{"number":"0.1.12","date":"2017-03-27T17:02:12.100Z"},{"number":"0.1.13","date":"2017-04-03T08:46:29.473Z"},{"number":"0.1.14","date":"2017-04-12T13:48:35.859Z"},{"number":"0.1.15","date":"2017-05-16T18:10:05.173Z"},{"number":"0.1.16","date":"2017-05-16T19:03:20.710Z"}],"readme":"\n## lucify-notifier\n\nA Node.js CLI utility for sending deployment notifications to\nFlowdock and/or to GitHub's [Deployments API](https://developer.github.com/v3/repos/deployments/).\n\n`lucify-notifier` wraps a shell command and sends success or failure\nnotifications based on the exit code of the wrapped executable.\n\nAt Lucify we use `lucify-notifier` as part of our CI pipeline, for example\nwith the following deploy script in `package.json`:\n\n```json\n\"scripts\": {\n  \"deploy\": \"lucify-notifier ecs-updater\"\n}\n```\n\n## Authentication\n\n### Flowdock\nThe flow and the authorization to post to it are specified with the `FLOWDOCK_FLOW_TOKEN`\nenvironment variable. This needs to be a so called *source* `flow_token`:\nhttps://www.flowdock.com/api/sources.\n\n### GitHub\nTo authorize with GitHub, you need to create and install a GitHub [Integration](https://developer.github.com/early-access/integrations/) (still an *early access* feature)\nfor your organization. The integration needs to have *read and write access to commit statuses and deployments*.\nWith the integration installed, the following environment variables need to be set:\n\n```shell\nGITHUB_CREDENTIALS_INTEGRATION_ID=\"<the id of the integration>\"\nGITHUB_CREDENTIALS_INSTALLATION_ID=\"<the installation id of the above integration>\"\nGITHUB_CREDENTIALS_KEY=\"<the secret key retrieved from GH's UI when installing the integration>\"\n```\n\nAnother way to provide the GitHub credentials is store the above information\nas a json file in a S3 bucket. The json should have the following schema:\n\n```json\n{\n  \"integration_id\": \"number\",\n  \"installation_id\": \"number\",\n  \"key\": \"string\"\n}\n```\n\nIn this scenario the following environment variables need\nto be set:\n\n```shell\nAWS_ACCESS_KEY_ID=\"<credentials for accessing the above S3 object>\"\nAWS_SECRET_ACCESS_KEY=\"<credentials for accessing the above S3 object>\"\n```\n\nThe location of the credentials file can be provided as an environment\nvariable\n\n```shell\nGITHUB_S3_CREDENTIALS=\"s3://<bucket>/<key>\"\n```\nor specified as `github.s3_credentials` in the configuration file described below.\n\n## Configuration\n\n`lucify-notifier` has three sources for its configuration, which\nare in order of preference:\n\n1. environment variables\n2. configuration file\n3. defaults\n\nThere are quite a few settings, here's the complete json\nschema with their defaults:\n\n```javascript\n{\n  github: {\n    // these correspond directly\n    // to the options in\n    // https://developer.github.com/v3/repos/deployments/#create-a-deployment\n    deploymentOptions: {\n      required_contexts: [],\n      task: 'deploy',\n      auto_merge: false,\n      payload: '',\n      description: '',\n      transient_environment: false,\n      production_environment: process.env.NODE_ENV === 'production',\n    },\n    // either credentials OR s3_credentials are required\n    credentials: {\n      integration_id: 0,\n      installation_id: 0,\n      key: '',\n    },\n    s3_credentials: '',\n  },\n  flowdock: {\n    flow_token: '', // required\n    author: {\n      name: '',\n      email: '', // required\n    },\n  },\n  deployment: {\n    branch: {\n      ref: 'master',\n      repository: '', // required\n      owner: '', // username or organization, required\n    },\n    environment: process.env.NODE_ENV,\n    committer: '', // required, explained in more detail below\n    url: '', // explained in more detail below\n    build_url: '', // explained in more detail below\n    commit_message: '', // explained in more detail below\n  },\n  build_command: '', // defaults to the one given on the command-line\n  decryption_key: '',\n  aws_temporary: '',\n}\n```\n\n### `deployment.committer`\nThis is crucial for the GitHub notifications. It has to correspond\nto a GitHub user who has authorization to create deployments in the specified repository.\nMore information about integrations acting on behalf of users can be found on\nhttps://developer.github.com/early-access/integrations/authentication/#requesting-an-access-token-on-behalf-of-a-user.\n\nIf `flowdock.author.name` is undefined, it defaults to `deployment.committer`.\n\n### `deployment.url`\n\nUsed in the notification content. Should be specified if the deployment can be viewed in the browser.\nIn GitHub's case, if specified, it will show a *view deployment*\nbutton in pull requests. In flowdock, it's part of the notification payload.\n\n### `deployment.build_url`\n\nUsed in the notification content. Should point to a url where a log of the build process can be viewed,\nsuch as a CI/CD service.  In GitHub's case, if specified, it will show a *deployed*\nlink in PRs. In flowdock, it's part of the notification payload.\n\n### `deployment.commit_message`\n\nUsed in the notification content. If not specified and the current working directory\nis a git repository, then the latest commit message from that repository is used.\n\n### Environment variables\nEach of the options can be specified\nwith an environment variable. The variable\nnames correspond to the above schema, so that\n, for example, `flowdock.author.name` would be looked\nfrom `FLOWDOCK_AUTHOR_NAME` and `decryption_key`\nfrom `DECRYPTION_KEY`.\n\n\n### Configuration file\nIf a file named `lucify-notifier.config.js|json`\nis found in the directory where `lucify-notifier`is executed,\nit is assumed to contain a json object with the schema\nspecified above. A `.js` file should export the json with\n\n```javascript\nmodule.exports = <json>\n```\n\nHere's an example of a typical configuration file:\n\n```javascript\nconst envVars = process.env;\nconst environment = envVars.NODE_ENV === 'production' ? 'production' : 'staging';\nconst statusUrl = `https://${environment === 'production' ? '' : 'staging.'}foo.io/status`;\nmodule.exports = {\n  deployment: {\n    branch: {\n      ref: envVars.CIRCLE_BRANCH,\n      owner: envVars.CIRCLE_PROJECT_USERNAME,\n      repository: envVars.CIRCLE_PROJECT_REPONAME,\n    },\n    committer: envVars.CIRCLE_USERNAME,\n    build_url: envVars.CIRCLE_BUILD_URL,\n    url: statusUrl,\n    environment,\n  },\n  github: {\n    s3_credentials: 's3://<bucket>/<aws_credentials_key>',\n    deploymentOptions: {\n      transient_environment: true,\n    },\n  },\n  flowdock: {\n    flow_token: '',\n    author: {\n      email: 'deploy@foo.com',\n    },\n  },\n  decryption_key: 's3://<bucket>/<public_key.pem>',\n}\n```\n\n## Credential decryption\n\nIn general `lucify-notifier` tries to\nnot affect the executable it wraps in any way.\nAll the environment variables are passed on, with\none exception: if the `AWS_TEMPORARY` option is specified,\nthen it is assumed that it constains encrypted\ntemporary AWS credentials that should be decrypted\nso that the wrapped executable can utilize them.\n\nThis feature serves a very specific purpose: when launching\nproduction deployments in CircleCI via its REST API, the extra environment\nvariables specified in the request, including the aws credentials, are visible\nin the build log output. To prevent revealing them, one can then\nspecify the `DECRYPTION_KEY` environment variable in the CircleCI project\nsettings (these are never visible) and provide an encrypted json object\nin the `AWS_TEMPORARY` variable. Note that the `DECRYPTION_KEY` is allowed\nto contain a link to an S3 object containing the actual key.\nThe json object should conform to the following\nschema:\n\n```json\n{\n  \"accessKeyId\": \"<AWS_ACCESS_KEY_ID>\",\n  \"secretAccessKey\": \"<AWS_SECRET_ACCESS_KEY>\",\n  \"sessionToken\": \"<AWS_SESSION_TOKEN>\",\n}\n```\n\nThe decryption procedure assumes that the encryption\nwas done according to the JSON Web Tokens specification, using\nthe asymmetric `RS256` algorithm. Thus the `DECRYPTION_KEY` is the\npublic key in the serialized PKCS8 format.\n\nCreating a suitable key-pair can be done with `ssh-keygen`:\n```shell\nssh-keygen -t rsa -b 1024 -C \"foo@bar.net\"\nssh-keygen -e -m PKCS8 -f id_rsa.pub > id_rsa.pub.pem\n# now id_rsa contains the private key and id_rsa.pub.pem the public key in the correct format\n```\n\nThen in Node.js the encryption can be done thus:\n```javascript\nconst jwt = require('jsonwebtoken');\nconst privateKey = fs.readFileSync('id_rsa');\nconst aws = {\n  'accessKeyId': '<AWS_ACCESS_KEY_ID>',\n  'secretAccessKey': '<AWS_SECRET_ACCESS_KEY>',\n  'sessionToken': '<AWS_SESSION_TOKEN>',\n}\nconst encrypted = jwt.sign(aws, privateKey, { algorithm: 'RS256', expiresIn: '10m' });\n```\n","created":"2016-09-21T17:51:25.759Z","modified":"2017-05-16T19:03:20.710Z","lastPublisher":{"name":"lucify-master","email":"info@lucify.com"},"owners":[{"name":"lucify-master","email":"info@lucify.com"}],"other":{"_attachments":{},"_from":".","_id":"lucify-notifier","_nodeVersion":"7.8.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/lucify-notifier-0.1.16.tgz_1494961398498_0.3595712522510439"},"_npmUser":{"name":"lucify-master","email":"info@lucify.com"},"_npmVersion":"4.4.4","_rev":"6-9344fb3c81d9945c75c58c32c8c0feda","_shasum":"b0237e7c6cb172860201e6c52e7e9145e162547e","bugs":{"url":"https://github.com/lucified/lucify-notifier/issues"},"contributors":[{"name":"Juho Ojala","email":"juho@lucify.com"},{"name":"Ville Saarinen","email":"ville.saarinen@lucify.com"},{"name":"Ville Väänänen","email":"ville@lucify.com"}],"directories":{},"dist-tags":{"latest":"0.1.16","next":"0.1.8","beta":"0.1.15"},"dist":{"shasum":"b0237e7c6cb172860201e6c52e7e9145e162547e","tarball":"https://registry.npmjs.org/lucify-notifier/-/lucify-notifier-0.1.16.tgz"},"maintainers":[{"name":"lucify-master","email":"info@lucify.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-16T19:03:20.710Z","created":"2016-09-21T17:51:25.759Z","0.0.2":"2016-09-21T17:51:25.759Z","0.1.0":"2016-09-21T18:15:49.059Z","0.1.1":"2016-09-23T10:36:09.890Z","0.1.2":"2016-09-29T18:00:51.130Z","0.1.3":"2016-09-30T10:46:44.394Z","0.1.4":"2016-09-30T11:18:11.750Z","0.1.5":"2016-10-10T12:42:18.573Z","0.1.6":"2016-10-10T19:24:38.033Z","0.1.7":"2016-10-10T20:15:25.617Z","0.1.8":"2016-10-10T20:33:17.042Z","0.1.9":"2016-10-11T10:10:40.670Z","0.1.12":"2017-03-27T17:02:12.100Z","0.1.13":"2017-04-03T08:46:29.473Z","0.1.14":"2017-04-12T13:48:35.859Z","0.1.15":"2017-05-16T18:10:05.173Z","0.1.16":"2017-05-16T19:03:20.710Z"}}}